{"ast":null,"code":"import { takeLatest, all, fork, put, call } from \"redux-saga/effects\";\nimport { tableDataLoadFail, tableDataLoadSuccess } from \"./action\";\nimport { dataLoader } from \"./apis\";\n\nfunction* tableDataLoadWorker() {\n  try {\n    const data = yield call(dataLoader);\n\n    if (data) {\n      yield put(tableDataLoadSuccess);\n    }\n  } catch (error) {\n    yield put(tableDataLoadFail());\n  }\n}\n\nfunction* tableDataLoadWatcher() {\n  yield takeLatest(\"LOAD_DATA\", tableDataLoadWorker);\n}\n\nexport default function* homePageSaga() {\n  yield all([tableDataLoadWatcher].map(fork));\n}","map":{"version":3,"sources":["E:/Projects/leetcode_ui/src/HomePage/saga.js"],"names":["takeLatest","all","fork","put","call","tableDataLoadFail","tableDataLoadSuccess","dataLoader","tableDataLoadWorker","data","error","tableDataLoadWatcher","homePageSaga","map"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,UAAxD;AACA,SAASC,UAAT,QAA2B,QAA3B;;AACA,UAAUC,mBAAV,GAAgC;AAC9B,MAAI;AACF,UAAMC,IAAI,GAAG,MAAML,IAAI,CAACG,UAAD,CAAvB;;AACA,QAAIE,IAAJ,EAAU;AACR,YAAMN,GAAG,CAACG,oBAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOI,KAAP,EAAc;AACd,UAAMP,GAAG,CAACE,iBAAiB,EAAlB,CAAT;AACD;AACF;;AACD,UAAUM,oBAAV,GAAiC;AAC/B,QAAMX,UAAU,CAAC,WAAD,EAAcQ,mBAAd,CAAhB;AACD;;AACD,eAAe,UAAUI,YAAV,GAAyB;AACtC,QAAMX,GAAG,CAAC,CAACU,oBAAD,EAAuBE,GAAvB,CAA2BX,IAA3B,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, all, fork, put, call } from \"redux-saga/effects\";\r\nimport { tableDataLoadFail, tableDataLoadSuccess } from \"./action\";\r\nimport { dataLoader } from \"./apis\";\r\nfunction* tableDataLoadWorker() {\r\n  try {\r\n    const data = yield call(dataLoader);\r\n    if (data) {\r\n      yield put(tableDataLoadSuccess);\r\n    }\r\n  } catch (error) {\r\n    yield put(tableDataLoadFail());\r\n  }\r\n}\r\nfunction* tableDataLoadWatcher() {\r\n  yield takeLatest(\"LOAD_DATA\", tableDataLoadWorker);\r\n}\r\nexport default function* homePageSaga() {\r\n  yield all([tableDataLoadWatcher].map(fork));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}