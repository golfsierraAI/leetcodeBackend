{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\leetcode_ui\\\\src\\\\HomePage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, Paper, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport react from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { tableDataLoadStart } from \"./action\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport homePageStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const classes = homePageStyles();\n  const dispatch = useDispatch();\n  react.useEffect(() => {\n    dispatch(tableDataLoadStart());\n  }, []);\n  const storeState = useSelector(state => {\n    return state.tableDataReducer;\n  });\n  const {\n    data\n  } = storeState.data;\n  return data ? /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Nothing\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"0jxSZ0G6/WDOZnSebiWn2VAVCUM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["E:/Projects/leetcode_ui/src/HomePage/index.js"],"names":["Checkbox","Paper","Table","TableBody","TableCell","TableHead","TableRow","DataGrid","react","useDispatch","useSelector","tableDataLoadStart","LinkIcon","homePageStyles","HomePage","classes","dispatch","useEffect","storeState","state","tableDataReducer","data","root"],"mappings":";;;AAAA,SACEA,QADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,QAPF,QAQO,mBARP;AASA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,UAA3B;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGF,cAAc,EAA9B;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AACAD,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBD,IAAAA,QAAQ,CAACL,kBAAkB,EAAnB,CAAR;AACD,GAFD,EAEG,EAFH;AAGA,QAAMO,UAAU,GAAGR,WAAW,CAAES,KAAD,IAAW;AACxC,WAAOA,KAAK,CAACC,gBAAb;AACD,GAF6B,CAA9B;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAWH,UAAU,CAACG,IAA5B;AACA,SAAOA,IAAI,gBACT,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEN,OAAO,CAACO,IAA1B;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADS,gBAiDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjDF;AAmDD,CA7DD;;GAAMR,Q;UAEaL,W,EAIEC,W;;;KANfI,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import {\r\n  Checkbox,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport react from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { tableDataLoadStart } from \"./action\";\r\nimport LinkIcon from \"@mui/icons-material/Link\";\r\nimport homePageStyles from \"./styles\";\r\nconst HomePage = () => {\r\n  const classes = homePageStyles();\r\n  const dispatch = useDispatch();\r\n  react.useEffect(() => {\r\n    dispatch(tableDataLoadStart());\r\n  }, []);\r\n  const storeState = useSelector((state) => {\r\n    return state.tableDataReducer;\r\n  });\r\n  const { data } = storeState.data;\r\n  return data ? (\r\n    <Paper className={classes.root}>\r\n      <DataGrid />\r\n      {/* <Table stickyHeader check>\r\n        <TableHead>\r\n          <TableRow>\r\n            {Object.keys(data[0])\r\n              .slice(1)\r\n              .map((key) => {\r\n                return (\r\n                  <TableCell>\r\n                    {key.slice(0, key.indexOf(\"n\") + 1).toUpperCase() +\r\n                      \" \" +\r\n                      key.slice(key.indexOf(\"n\") + 1, key.length).toUpperCase()}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody\r\n          classes={{\r\n            root: classes.tableBody,\r\n          }}\r\n        >\r\n          {data.map((key) => {\r\n            return (\r\n              <TableRow key={key.id}>\r\n                {Object.values(key)\r\n                  .slice(1)\r\n                  .map((value) => {\r\n                    return (\r\n                      <TableCell className={classes.tableCell}>\r\n                        {value.includes(\"https\") ? (\r\n                          <a href={value}>\r\n                            <LinkIcon />\r\n                          </a>\r\n                        ) : (\r\n                          value\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table> */}\r\n    </Paper>\r\n  ) : (\r\n    <h1>Nothing</h1>\r\n  );\r\n};\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}