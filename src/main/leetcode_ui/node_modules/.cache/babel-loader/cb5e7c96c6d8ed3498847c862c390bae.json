{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\leetcode_ui\\\\src\\\\HomePage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, Paper, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport react from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { tableDataLoadStart } from \"./action\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport homePageStyles from \"./styles\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const classes = homePageStyles();\n  const dispatch = useDispatch();\n  react.useEffect(() => {\n    dispatch(tableDataLoadStart());\n  }, []);\n  const storeState = useSelector(state => {\n    return state.tableDataReducer;\n  });\n  const {\n    data\n  } = storeState.data;\n\n  const capitalize = function (str) {\n    let lower = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n  };\n\n  return data ? /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.tableRow,\n      stickyHeader: true,\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            classes: {\n              root: classes.tableCellHeader\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: classes.link,\n              children: /*#__PURE__*/_jsxDEV(GitHubIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), Object.keys(data[0]).slice(1).map(key => {\n            return /*#__PURE__*/_jsxDEV(TableCell, {\n              classes: {\n                root: classes.tableCellHeader\n              },\n              children: capitalize(key.slice(0, key.indexOf(\"n\") + 1)) + \" \" + capitalize(key.slice(key.indexOf(\"n\") + 1, key.length))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        classes: {\n          root: classes.tableBody\n        },\n        children: data.map(key => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              classes: {\n                root: classes.tableCell\n              },\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), Object.values(key).slice(1).map(value => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                classes: {\n                  root: classes.tableCell\n                },\n                children: value.includes(\"https\") ? /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: value,\n                  className: classes.link,\n                  children: /*#__PURE__*/_jsxDEV(LinkIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 27\n                }, this) : capitalize(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this);\n            })]\n          }, key.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Nothing\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"0jxSZ0G6/WDOZnSebiWn2VAVCUM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["E:/Projects/leetcode_ui/src/HomePage/index.js"],"names":["Checkbox","Paper","Table","TableBody","TableCell","TableHead","TableRow","react","useDispatch","useSelector","tableDataLoadStart","LinkIcon","homePageStyles","GitHubIcon","HomePage","classes","dispatch","useEffect","storeState","state","tableDataReducer","data","capitalize","str","lower","toLowerCase","replace","match","toUpperCase","root","tableRow","tableCellHeader","link","Object","keys","slice","map","key","indexOf","length","tableBody","tableCell","values","value","includes","id"],"mappings":"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","sourcesContent":["import {\r\n  Checkbox,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport react from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { tableDataLoadStart } from \"./action\";\r\nimport LinkIcon from \"@mui/icons-material/Link\";\r\nimport homePageStyles from \"./styles\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nconst HomePage = () => {\r\n  const classes = homePageStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  react.useEffect(() => {\r\n    dispatch(tableDataLoadStart());\r\n  }, []);\r\n\r\n  const storeState = useSelector((state) => {\r\n    return state.tableDataReducer;\r\n  });\r\n  const { data } = storeState.data;\r\n\r\n  const capitalize = (str, lower = false) =>\r\n    (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, (match) =>\r\n      match.toUpperCase()\r\n    );\r\n  return data ? (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.tableRow} stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell classes={{ root: classes.tableCellHeader }}>\r\n              <a href=\"#\" className={classes.link}>\r\n                <GitHubIcon fontSize=\"large\" />\r\n              </a>\r\n            </TableCell>\r\n            {Object.keys(data[0])\r\n              .slice(1)\r\n              .map((key) => {\r\n                return (\r\n                  <TableCell classes={{ root: classes.tableCellHeader }}>\r\n                    {capitalize(key.slice(0, key.indexOf(\"n\") + 1)) +\r\n                      \" \" +\r\n                      capitalize(key.slice(key.indexOf(\"n\") + 1, key.length))}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody\r\n          classes={{\r\n            root: classes.tableBody,\r\n          }}\r\n        >\r\n          {data.map((key) => {\r\n            return (\r\n              <TableRow key={key.id}>\r\n                <TableCell classes={{ root: classes.tableCell }}>\r\n                  <Checkbox />\r\n                </TableCell>\r\n                {Object.values(key)\r\n                  .slice(1)\r\n                  .map((value) => {\r\n                    return (\r\n                      <TableCell classes={{ root: classes.tableCell }}>\r\n                        {value.includes(\"https\") ? (\r\n                          <a href={value} className={classes.link}>\r\n                            <LinkIcon />\r\n                          </a>\r\n                        ) : (\r\n                          capitalize(value)\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  ) : (\r\n    <h1>Nothing</h1>\r\n  );\r\n};\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}